{
	"Description": "This template retrieves the AMI ID associated with the SSM Parameter Name specified and launches instances with it.",
	"Parameters": {
		"ParameterName": {
			"Type": "String",
			"Description": "The name of the parameter that holds the AMI ID. For example - /aws/service/ecs/optimized-ami/amazon-linux/recommended"
		},
		"FunctionBucket": {
			"Type": "String",
			"Description": "The name of the bucket that contains the Lambda function zip file."
		},
		"FunctionKey": {
			"Type": "String",
			"Description": "The name of the Lambda function zip file uploaded to S3."
		},
		"InstanceType": {
			"Type": "String",
			"Description": "The instance type to launch."
		},
		"MinInstances": {
			"Type": "Number",
			"Description": "The minimum number of instances to have in the ASG."
		},
		"MaxInstances": {
			"Type": "Number",
			"Description": "The maximum number of instances to have in the ASG."
		},
		"Subnets": {
			"Type": "List<AWS::EC2::Subnet::Id>",
			"Description": "Subnets across which you want to launch instances."
		}
	},
	"Resources": {
		"LambdaExecutionRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Principal": {
							"Service": ["lambda.amazonaws.com"]
						},
						"Action": ["sts:AssumeRole"]
					}]
				},
				"Path": "/",
				"Policies": [{
					"PolicyName": "root",
					"PolicyDocument": {
						"Version": "2012-10-17",
						"Statement": [{
								"Effect": "Allow",
								"Action": ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents"],
								"Resource": "arn:aws:logs:*:*:*"
							},
							{
								"Effect": "Allow",
								"Action": ["ssm:GetParameter"],
								"Resource": "*"
							}
						]
					}
				}]
			}
		},
		"LambdaFunction": {
			"Type": "AWS::Lambda::Function",
			"Properties": {
				"Code": {
					"S3Bucket": {
						"Ref": "FunctionBucket"
					},
					"S3Key": {
						"Ref": "FunctionKey"
					}
				},
				"Handler": "lambda_function.lambda_handler",
				"Role": {
					"Fn::GetAtt": ["LambdaExecutionRole", "Arn"]
				},
				"Runtime": "python2.7",
				"Timeout": "30"
			}
		},
		"AMIFetchCustomResource": {
			"Type": "Custom::AMIInfo",
			"Properties": {
				"ServiceToken": {
					"Fn::GetAtt": ["LambdaFunction", "Arn"]
				},
				"Parameter": {
					"Ref": "ParameterName"
				}
			}
		},
		"LaunchConfiguration": {
			"Type": "AWS::AutoScaling::LaunchConfiguration",
			"Properties": {
				"ImageId": {
					"Fn::GetAtt": ["AMIFetchCustomResource", "AMI"]
				},
				"InstanceType": {"Ref": "InstanceType"}
			}
		},
		"AutoScalingGroup": {
			"Type": "AWS::AutoScaling::AutoScalingGroup",
			"Properties": {
				"MaxSize": {"Ref": "MaxInstances"},
				"MinSize": {"Ref": "MinInstances"},
				"VPCZoneIdentifier": {"Ref": "Subnets"},
				"LaunchConfigurationName": {
					"Ref": "LaunchConfiguration"
				}
			}
		}
	}
}

